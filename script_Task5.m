%%%% TASK 5 SCRIPT %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% To compute the pressure generated by an acoustic point source across an
% extended xy-place.
%
% Parameters set:
% Spatial grid:         -3 mm <= x <= 3 mm
%                       -3 mm <= y <= 3 mm
%                               z = 0
% Temporal axis:        0 <= t <= 3 microseconds
% Temporal step size:           10 ns
% Sound speed:              c = 1500 m/s
% Initial pressure:         p_0 = 1 Pa*m
% Source location:      (x_s,y_s,z_s) = (0,0,0)
%
% Gaussian tone burst parameters as in Task 2:
% f_0 = 10 MHz
% sigma = 50 ns
% delta_t = 10 ns
%
% p(x,y,z,t) computed using function comp_press_field_point_source
% Gaussian tone burst computed using function comp_Gaussian_tone_burst
%
%
% OUPUT FIGURE:
% To display the pressure field across the plabe defined by x and y, as
% observed at t = 1 microsecond.
% Impulse respone p and response to a Gaussian tone burst s displayed in
% two separate panels in one figure.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%
clearvars;

%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Set parameters %%%%
%%%%%%%%%%%%%%%%%%%%%%%%

% set spatial grid [mm]
x = (-3:10E-3:3);
y = (-3:10E-3:3);
z = 0;
% indices for x,y,z coordinates
ind_x = 1:numel(x);
ind_y = 1:numel(y);
ind_z = 1:numel(z);
% set temporal axis and step size [s]
delta_t = 10E-9;
t = (0:delta_t:3E-6);
% set speed of sound [mm/s]
c = 1500E3;
% set source location [mm]
xs = 0; ys = 0; zs = 0;
% set initial pressure [Pa*mm]
p_0 = 1E3;


% set Gaussian tone burst parameters from Task 2

% set centre frequency [Hz]
f_0 = 10E6;
% set standard deviation [s]
sigma = 50E-9;
% set temporal step size [s]
delta_t = 10E-9;

%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Compute p(x,y,z,t) and s(x,y,z,t) %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% compute p(x,y,z,t) for all points in space and time within grid
p = comp_press_field_point_source(c,p_0,x,y,z,xs,ys,zs,t,delta_t);

% find p(x,y,z,t) at t = 1 microsecond
ind_tspecific = find(t == 1E-6); % time index when t = 1 microsecond
p_tspecific = p(ind_x,ind_y,ind_z,ind_tspecific);

% calculate excitation function
exc_fn = comp_Gaussian_tone_burst(f_0,sigma,delta_t);

% preallocate size of total s (601x601)
tot_s = zeros(numel(x),numel(y));

% loop over all x and y values, compute each s corresponding to each grid
% point over all time points, sum all individual s at t=1 microsecond to
% tot_s
for ind_x = 1:numel(x)
    for ind_y = 1:numel(y)
        
        % get pressure field at each grid point over all time points
        each_p = p(ind_x,ind_y,1,1:numel(t));
        
        % compute convolution between each pressure field and excitation
        % function over time
        each_s = conv(each_p(:),exc_fn,'same');
        
        % store each s at t=1 microsecond into tot_s, which gives a 601x601
        % array
        tot_s(ind_x,ind_y) = each_s(ind_tspecific,:);
        
        
    end
end

%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Display p(x,y,z,t) and s(x,y,z,t) %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure;
hold on;

% impulse response p %
subplot(1,2,1)
% 2D filled contour plot with 200 contour levels set
contourf(x,y,p_tspecific,200,'edgecolor','none')

title('Impulse response [Pa] at t = 1 \mus')
xlabel('x [mm]')
ylabel('y [mm]')
axis equal % use equal unit lengths along both axes
colormap(hot)
colorbar
caxis([-75 75]) % set colorbar limits


% Gaussian tone burst s %
subplot(1,2,2)
% note: plotting the transpose of tot_s
% 2D filled contour plot with 200 contour levels set
contourf(x,y,tot_s',200,'edgecolor','none')

title('Field produced by Gaussian tone burst [Pa]')
xlabel('x [mm]')
ylabel('y [mm]')
axis equal % use equal unit lengths along both axes
colormap(hot)
colorbar
caxis([-75 75]) % set colorbar limits




