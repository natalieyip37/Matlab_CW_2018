%%% TASK 4 SCRIPT %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 1. To compute the amplitude spectrum S(f) of s(x,y,z,t) from Task 3, and
% plot this spectrum as a function of frequency f.
% 
% 2. Vary values of centre frequency and standard deviation, compute
% s(x,y,z,t) for these values, plot resulting amplitude spectrum in the  
% same figure in different panels.
%
% Six different pairs of values of f_0 and sigma in total.
%
% Only showing amplitude spectra for positive frequencies
%
% Parameters limitation: 2 <= f_0 <= 40 MHz
%                        5 <= sigma <= 500 ns
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
clearvars;

%%%%%%%%%%%%%%%%
%%%% PART 1 %%%%
%%%%%%%%%%%%%%%%



%%%% FROM TASK 3 %%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Compute impulse response p(x,y,z,t) %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% set parameters from Task 1

% set pressure grid point [mm]
x = 1; y = 1; z = 0;
% set point source grid point [mm] 
xs = 0; ys = 0; zs = 0;
% set speed of sound [mm/s]
c = 1500E3;
% set initial acoustic pressure [Pa*mm]
p_0 = 1E3;
% set temporal step size [s]
delta_t = 10E-9;
% create array of time points in range 0<=t<=3 with temporal step size
% delta_t [s]
t_p = (0:delta_t:3E-6);

% calculate impulse response
imp_resp = comp_press_field_point_source(c,p_0,x,y,z,xs,ys,zs,t_p,delta_t);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Compute excitation function G(t;f_0,sigma) %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% set parameters from Task 2

% set centre frequency [Hz]
f_0 = 10E6;
% set standard deviation [s]
sigma = 50E-9;
% set temporal step size [s]
delta_t = 10E-9;
% set time range using approximation -4*stdev <= t <= +4*stdev
t_G = (-4*sigma:delta_t:4*sigma);

% calculate excitation function
exc_fn = comp_Gaussian_tone_burst(f_0,sigma,delta_t);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Compute pressure generated by an excitation signal of finite duration%
%%%% in time %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% by convolving impulse response p and excitation function G over time
s = conv(imp_resp(:),exc_fn,'same');



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Compute amplitude spectrum S(f) of s(x,y,z,t) of Task 3 %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% compute modulus of complex Fourier transform of excitation singal s(t)
amp_spec_s = abs(fft(s'));

% number of samples in amplitude spectrum
N_samples = numel(amp_spec_s);

% obtain frequency axis for entire amplitude spectrum
freq_axis = 1/delta_t * ((0:N_samples-1)./N_samples);

% number of data points for positive freqency and amplitude values
N_pos = round(numel(freq_axis)/2);

% extract only positive frequency axis and amplitude spectrum
pos_freq_axis = freq_axis(1:N_pos);
pos_amp = amp_spec_s(1:N_pos);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Plot amplitude spectrum as a function of frequency f %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure;
plot(pos_freq_axis,pos_amp)
xlabel('Frequency [Hz]')
ylabel('Modulus of FFT')
title('Amplitude spectrum of Gaussian tone burst: f_0 = 10 MHz, \sigma = 5 ns')



%%

%%%%%%%%%%%%%%%%
%%%% PART 2 %%%%
%%%%%%%%%%%%%%%%




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Set six different pairs of f_0 and sigma within defined range %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Note: parameters in SI units (f_0 [Hz]; sigma [s]) %

% set 6 equally spaced centre frequencies within range
f_0_new = linspace(2E6,40E6,6);

% set 6 equally spaced sigmas within range
sigma_new = linspace(5E-9,500E-9,6);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Generate amplitude spectra %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% find maximum column size for excitation function (since different sigmas
% give different sizes of excitation function)
maxCol = numel(comp_Gaussian_tone_burst(f_0_new(6),sigma_new(6),delta_t));


% preallocate cell size for excitation functions, pressure generated (s),
% amplitude spectra
exc_fn_new = cell(6,maxCol);
s_new = cell(N_samples,6);
amp_spec_s_new = cell(6,N_samples);
pos_amp_new = cell(6,round(N_samples/2));


% loop over all frequency values to compute excitation functions, pressure
% s(x,y,z,t) and amplitude spectra
for n = 1:length(f_0_new)

    % calculate excitation functions for each pairs of f_0 and sigma
    % return a 6x401 cell
    exc_fn_new{n} = comp_Gaussian_tone_burst(f_0_new(n),sigma_new(n),delta_t);

    
    % compute s(x,y,z,t) for each pairs of f_0 and sigma
    % return a 301x6 cell
    s_new{n} = conv(imp_resp(:),exc_fn_new{n},'same');
    

    % compute modulus of complex Fourier transform of excitation signal s(t)
    % for each pair of f_0 and sigma
    % return a 6x301 cell
    amp_spec_s_new{n} = abs(fft(s_new{n}'));

end

% loop over all frequency values to get the positive amplitude spectra
for n = 1:length(f_0_new)
    
    % compute positive amplitude spectra (from 0 up to the positive Nyquist
    % frequency)
    pos_amp_new{n} = amp_spec_s_new{n}(1:round(N_samples/2));
    
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Plot all resulting amplitude spectra in one figure %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% create one figure containing all subplots
figure;
hold on;

x = xlabel('Frequency [Hz]');
y = ylabel('Modulus of FFT');
suptitle('Six amplitude spectra of Gaussian tone burst')

% create all subplots (six in total)
subplot(3,2,1)
plot(pos_freq_axis,pos_amp_new{1})
title(['f_0 = ',num2str(f_0_new(1)),'Hz',' \sigma = ',num2str(sigma_new(1)),'s'])

subplot(3,2,3)
plot(pos_freq_axis,pos_amp_new{2})
title(['f_0 = ',num2str(f_0_new(2)),'Hz',' \sigma = ',num2str(sigma_new(2)),'s'])
ylabel('Modulus of FFT','FontSize',15)

subplot(3,2,5)
plot(pos_freq_axis,pos_amp_new{3})
title(['f_0 = ',num2str(f_0_new(3)),'Hz',' \sigma = ',num2str(sigma_new(3)),'s'])
xlabel('Frequency [Hz]')

subplot(3,2,2)
plot(pos_freq_axis,pos_amp_new{4})
title(['f_0 = ',num2str(f_0_new(4)),'Hz',' \sigma = ',num2str(sigma_new(4)),'s'])

subplot(3,2,4)
plot(pos_freq_axis,pos_amp_new{5})
title(['f_0 = ',num2str(f_0_new(5)),'Hz',' \sigma = ',num2str(sigma_new(5)),'s'])

subplot(3,2,6)
plot(pos_freq_axis,pos_amp_new{6})
title(['f_0 = ',num2str(f_0_new(6)),'Hz',' \sigma = ',num2str(sigma_new(6)),'s'])
xlabel('Frequency [Hz]')

%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Discussion of results %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% As f_0 increases, the amplitude of the Gaussian tone burst increases in
% magnitude (shown as the modulus of FFT in the plots).
%
% As sigma increases, the full width half maximum (FWHM) of the Gaussian
% curve decreases in magnitude.


